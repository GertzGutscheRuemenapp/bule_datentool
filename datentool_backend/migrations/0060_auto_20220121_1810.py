# Generated by Django 3.2.11 on 2022-01-21 17:10

import datentool_backend.utils.protect_cascade
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('datentool_backend', '0059_auto_20220121_1711'),
    ]

    operations = [
        migrations.AddField(
            model_name='scenario',
            name='prognosis',
            field=models.ForeignKey(default=1, on_delete=datentool_backend.utils.protect_cascade.PROTECT_CASCADE, to='datentool_backend.prognosis'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='ScenarioService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demandrateset', models.ForeignKey(on_delete=datentool_backend.utils.protect_cascade.PROTECT_CASCADE, to='datentool_backend.demandrateset')),
                ('scenario', models.ForeignKey(on_delete=datentool_backend.utils.protect_cascade.PROTECT_CASCADE, to='datentool_backend.scenario')),
                ('service', models.ForeignKey(on_delete=datentool_backend.utils.protect_cascade.PROTECT_CASCADE, to='datentool_backend.service')),
            ],
        ),
        migrations.CreateModel(
            name='ScenarioMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.ForeignKey(on_delete=datentool_backend.utils.protect_cascade.PROTECT_CASCADE, to='datentool_backend.mode')),
                ('scenario', models.ForeignKey(on_delete=datentool_backend.utils.protect_cascade.PROTECT_CASCADE, to='datentool_backend.scenario')),
                ('variant', models.ForeignKey(on_delete=datentool_backend.utils.protect_cascade.PROTECT_CASCADE, to='datentool_backend.modevariant')),
            ],
        ),
        migrations.AddField(
            model_name='scenario',
            name='demandratesets',
            field=models.ManyToManyField(blank=True, related_name='scenario_service', through='datentool_backend.ScenarioService', to='datentool_backend.DemandRateSet'),
        ),
        migrations.AddField(
            model_name='scenario',
            name='modevariants',
            field=models.ManyToManyField(blank=True, related_name='scenario_mode', through='datentool_backend.ScenarioMode', to='datentool_backend.Mode'),
        ),
    ]
