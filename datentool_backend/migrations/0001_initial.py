# Generated by Django 3.2.4 on 2021-07-28 12:41

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgeClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='AgeGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_age', models.IntegerField()),
                ('to_age', models.IntegerField()),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.ageclassification')),
            ],
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('attributes', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='AreaLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('order', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DisaggPopRaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FieldType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_type', models.CharField(choices=[('CLA', 'Classification'), ('NUM', 'Number'), ('STR', 'String')], max_length=3)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LayerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('order', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Modes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ModeVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('meta', models.JSONField()),
                ('is_default', models.BooleanField()),
                ('mode', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.modes')),
            ],
        ),
        migrations.CreateModel(
            name='Population',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_level', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.arealevel')),
                ('genders', models.ManyToManyField(to='datentool_backend.Gender')),
                ('raster', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.disaggpopraster')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_access', models.BooleanField(default=False)),
                ('can_create_scenarios', models.BooleanField(default=False)),
                ('can_edit_data', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prognosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('is_default', models.BooleanField()),
                ('age_classification', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.ageclassification')),
                ('raster', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.disaggpopraster')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('allow_shared_change', models.BooleanField()),
                ('map_section', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.profile')),
                ('users', models.ManyToManyField(related_name='shared_with_users', to='datentool_backend.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='Quota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_type', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Raster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RasterCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cellcode', models.TextField()),
                ('value', models.FloatField()),
                ('raster', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.raster')),
            ],
        ),
        migrations.CreateModel(
            name='Router',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('osm_file', models.TextField()),
                ('tiff_file', models.TextField()),
                ('gtfs_file', models.TextField()),
                ('build_date', models.DateField()),
                ('buffer', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('title', models.TextField(default='Datentool')),
                ('contact_mail', models.EmailField(default='', max_length=254)),
                ('logo', models.ImageField(upload_to='')),
                ('primary_color', models.CharField(default='#50AF32', max_length=30)),
                ('secondary_color', models.CharField(default='#0390fc', max_length=30)),
                ('welcome_text', models.TextField(default='Willkommen')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('WFS', 'WFS Source'), ('FILE', 'File Source')], max_length=4)),
                ('date', models.DateField()),
                ('id_field', models.TextField()),
                ('url', models.URLField(blank=True, null=True)),
                ('layer', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SymbolForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Years',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WMSLayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('layer_name', models.TextField()),
                ('order', models.IntegerField(unique=True)),
                ('url', models.URLField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.layergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('capacity_singular_unit', models.TextField()),
                ('capacity_plural_unit', models.TextField()),
                ('has_capacity', models.BooleanField()),
                ('demand_singular_unit', models.TextField()),
                ('demand_plural_unit', models.TextField()),
                ('editable_by', models.ManyToManyField(related_name='service_editable_by', to='datentool_backend.Profile')),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.infrastructure')),
                ('quota', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.quota')),
            ],
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.project')),
            ],
        ),
        migrations.CreateModel(
            name='ReachabilityMatrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minutes', models.FloatField()),
                ('from_cell', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='from_cell', to='datentool_backend.rastercell')),
                ('to_cell', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='to_cell', to='datentool_backend.rastercell')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.modevariant')),
            ],
        ),
        migrations.CreateModel(
            name='RasterPopulationCell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('age', models.IntegerField()),
                ('value', models.FloatField()),
                ('cell', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.rastercell')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.gender')),
                ('raster', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.disaggpopraster')),
            ],
        ),
        migrations.AddField(
            model_name='raster',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.years'),
        ),
        migrations.CreateModel(
            name='PrognosisEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('agegroup', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.agegroup')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.area')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.gender')),
                ('prognosis', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.prognosis')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.years')),
            ],
        ),
        migrations.AddField(
            model_name='prognosis',
            name='years',
            field=models.ManyToManyField(to='datentool_backend.Years'),
        ),
        migrations.CreateModel(
            name='PopulationEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.area')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.gender')),
                ('population', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.population')),
            ],
        ),
        migrations.AddField(
            model_name='population',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.years'),
        ),
        migrations.CreateModel(
            name='PopStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.years')),
            ],
        ),
        migrations.CreateModel(
            name='PopStatEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField()),
                ('immigration', models.FloatField()),
                ('emigration', models.FloatField()),
                ('births', models.FloatField()),
                ('deaths', models.FloatField()),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.area')),
                ('popstatistic', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.popstatistic')),
            ],
        ),
        migrations.CreateModel(
            name='PlaceUploadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('text', models.TextField()),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.infrastructure')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribure', models.TextField()),
                ('unit', models.TextField()),
                ('field_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.fieldtype')),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.infrastructure')),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('attributes', models.JSONField()),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.infrastructure')),
            ],
        ),
        migrations.CreateModel(
            name='MapSymbols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fill_color', models.CharField(max_length=9)),
                ('stroke_color', models.CharField(max_length=9)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.symbolform')),
            ],
        ),
        migrations.CreateModel(
            name='InternalWFSLayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('layer_name', models.TextField()),
                ('order', models.IntegerField(unique=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.layergroup')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.mapsymbols')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='accessible_by',
            field=models.ManyToManyField(related_name='infrastructure_accessible_by', to='datentool_backend.Profile'),
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='editable_by',
            field=models.ManyToManyField(related_name='infrastructure_editable_by', to='datentool_backend.Profile'),
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='layer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.internalwfslayer'),
        ),
        migrations.AddField(
            model_name='infrastructure',
            name='symbol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.mapsymbols'),
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator_type', models.CharField(choices=[('T1', 'Type1'), ('T2', 'Type2')], max_length=2)),
                ('name', models.TextField()),
                ('parameters', models.JSONField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.service')),
            ],
        ),
        migrations.CreateModel(
            name='FClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(unique=True)),
                ('value', models.TextField()),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.fieldtype')),
            ],
        ),
        migrations.AddField(
            model_name='disaggpopraster',
            name='genders',
            field=models.ManyToManyField(to='datentool_backend.Gender'),
        ),
        migrations.CreateModel(
            name='CapacityUploadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('text', models.TextField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Capacity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.FloatField()),
                ('from_year', models.IntegerField()),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.place')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.service')),
            ],
        ),
        migrations.CreateModel(
            name='AreaUploadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('text', models.TextField()),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.arealevel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='arealevel',
            name='layer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.internalwfslayer'),
        ),
        migrations.AddField(
            model_name='arealevel',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.source'),
        ),
        migrations.AddField(
            model_name='area',
            name='area_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.arealevel'),
        ),
    ]
