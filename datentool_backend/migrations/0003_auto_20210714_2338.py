# Generated by Django 3.2.5 on 2021-07-14 21:38

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('datentool_backend', '0002_project_scenario'),
    ]

    operations = [
        migrations.CreateModel(
            name='AreaLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('order', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FieldType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_type', models.CharField(choices=[('CLA', 'Classification'), ('NUM', 'Number'), ('STR', 'String')], max_length=3)),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Infrastructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('accessible_by', models.ManyToManyField(related_name='infrastructure_accessible_by', to='datentool_backend.Profile')),
                ('editable_by', models.ManyToManyField(related_name='infrastructure_editable_by', to='datentool_backend.Profile')),
            ],
        ),
        migrations.CreateModel(
            name='LayerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('order', models.IntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Quota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quota_type', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_type', models.CharField(choices=[('WFS', 'WFS Source'), ('FILE', 'File Source')], max_length=4)),
                ('date', models.DateField()),
                ('id_field', models.TextField()),
                ('url', models.URLField(blank=True, null=True)),
                ('layer', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SymbolForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='WMSLayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('layer_name', models.TextField()),
                ('order', models.IntegerField(unique=True)),
                ('url', models.URLField()),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.layergroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('capacity_singular_unit', models.TextField()),
                ('capacity_plural_unit', models.TextField()),
                ('has_capacity', models.BooleanField()),
                ('demand_singular_unit', models.TextField()),
                ('demand_plural_unit', models.TextField()),
                ('editable_by', models.ManyToManyField(related_name='service_editable_by', to='datentool_backend.Profile')),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.infrastructure')),
                ('quota', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.quota')),
            ],
        ),
        migrations.CreateModel(
            name='PlaceUploadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('text', models.TextField()),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.infrastructure')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlaceField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribure', models.TextField()),
                ('unit', models.TextField()),
                ('field_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.fieldtype')),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.infrastructure')),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('attributes', models.JSONField()),
                ('infrastructure', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.infrastructure')),
            ],
        ),
        migrations.CreateModel(
            name='MapSymbols',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fill_color', models.CharField(max_length=9)),
                ('stroke_color', models.CharField(max_length=9)),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.symbolform')),
            ],
        ),
        migrations.CreateModel(
            name='InternalWFSLayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('layer_name', models.TextField()),
                ('order', models.IntegerField(unique=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.layergroup')),
                ('symbol', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.mapsymbols')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(unique=True)),
                ('value', models.TextField()),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.fieldtype')),
            ],
        ),
        migrations.CreateModel(
            name='CapacityUploadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('text', models.TextField()),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Capacity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity', models.FloatField()),
                ('from_year', models.IntegerField()),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.place')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.service')),
            ],
        ),
        migrations.CreateModel(
            name='AreaUploadLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('text', models.TextField()),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.arealevel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='arealevel',
            name='layer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.internalwfslayer'),
        ),
        migrations.AddField(
            model_name='arealevel',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.source'),
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('attributes', models.JSONField()),
                ('area_level', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='datentool_backend.arealevel')),
            ],
        ),
    ]
